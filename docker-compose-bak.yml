version: "3.1"

services:
  v2raya:
    image: mzz2017/v2raya:latest
    container_name: v2raya
    restart: always
    privileged: true
    network_mode: host
    volumes:
      - /etc/v2raya:/etc/v2raya
      - /lib/modules:/lib/modules:ro
      - /etc/resolv.conf:/etc/resolv.conf
    environment:
      TZ: Asia/Shanghai
      V2RAYA_ADDRESS: 0.0.0.0:2017

  photoprism:
    image: photoprism/photoprism:latest
    container_name: photoprism
    depends_on:
      - mariadb
    ## Don't enable automatic restarts until PhotoPrism has been properly configured and tested!
    ## If the service gets stuck in a restart loop, this points to a memory, filesystem, network, or database issue:
    ## https://docs.photoprism.app/getting-started/troubleshooting/#fatal-server-errors
    restart: always
    privileged: true
    security_opt:
      - seccomp:unconfined
      - apparmor:unconfined
    ports:
      - "2342:2342" # HTTP port (host:container)
    # network_mode: host
    environment:
      TZ: Asia/Shanghai
      PHOTOPRISM_ADMIN_USER: "gwq5210"                 # admin username
      PHOTOPRISM_ADMIN_PASSWORD: "a123456789"          # initial admin password (minimum 8 characters)
      PHOTOPRISM_AUTH_MODE: "password"               # authentication mode (public, password)
      PHOTOPRISM_SITE_URL: "http://truenas.local:2342/"  # server URL in the format "http(s)://domain.name(:port)/(path)"
      PHOTOPRISM_ORIGINALS_LIMIT: 50000              # file size limit for originals in MB (increase for high-res video)
      PHOTOPRISM_HTTP_COMPRESSION: "gzip"            # improves transfer speed and bandwidth utilization (none or gzip)
      PHOTOPRISM_LOG_LEVEL: "info"                   # log level: trace, debug, info, warning, error, fatal, or panic
      PHOTOPRISM_READONLY: "false"                   # do not modify originals directory (reduced functionality)
      PHOTOPRISM_EXPERIMENTAL: "false"               # enables experimental features
      PHOTOPRISM_DISABLE_CHOWN: "false"              # disables updating storage permissions via chmod and chown on startup
      PHOTOPRISM_DISABLE_WEBDAV: "false"             # disables built-in WebDAV server
      PHOTOPRISM_DISABLE_SETTINGS: "false"           # disables settings UI and API
      PHOTOPRISM_DISABLE_TENSORFLOW: "false"         # disables all features depending on TensorFlow
      PHOTOPRISM_DISABLE_FACES: "false"              # disables face detection and recognition (requires TensorFlow)
      PHOTOPRISM_DISABLE_CLASSIFICATION: "false"     # disables image classification (requires TensorFlow)
      PHOTOPRISM_DISABLE_RAW: "false"                # disables indexing and conversion of RAW files
      PHOTOPRISM_RAW_PRESETS: "false"                # enables applying user presets when converting RAW files (reduces performance)
      PHOTOPRISM_JPEG_QUALITY: 85                    # a higher value increases the quality and file size of JPEG images and thumbnails (25-100)
      PHOTOPRISM_DETECT_NSFW: "false"                # automatically flags photos as private that MAY be offensive (requires TensorFlow)
      PHOTOPRISM_UPLOAD_NSFW: "true"                 # allows uploads that MAY be offensive (no effect without TensorFlow)
      # PHOTOPRISM_DATABASE_DRIVER: "sqlite"         # SQLite is an embedded database that doesn't require a server
      PHOTOPRISM_DATABASE_DRIVER: "mysql"            # use MariaDB 10.5+ or MySQL 8+ instead of SQLite for improved performance
      PHOTOPRISM_DATABASE_SERVER: "mariadb:3306"     # MariaDB or MySQL database server (hostname:port)
      PHOTOPRISM_DATABASE_NAME: "photoprism"         # MariaDB or MySQL database schema name
      PHOTOPRISM_DATABASE_USER: "photoprism"         # MariaDB or MySQL database user name
      PHOTOPRISM_DATABASE_PASSWORD: "a123456789"       # MariaDB or MySQL database user password
      PHOTOPRISM_SITE_CAPTION: "AI-Powered Photos App"
      PHOTOPRISM_SITE_DESCRIPTION: ""                # meta site description
      PHOTOPRISM_SITE_AUTHOR: "gwq5210"                     # meta site author
      ## Run/install on first startup (options: update https gpu tensorflow davfs clitools clean):
      PHOTOPRISM_INIT: "tensorflow"
      ## Hardware Video Transcoding:
      PHOTOPRISM_FFMPEG_ENCODER: "nvidia"        # FFmpeg encoder ("software", "intel", "nvidia", "apple", "raspberry")
      # PHOTOPRISM_FFMPEG_BITRATE: "32"              # FFmpeg encoding bitrate limit in Mbit/s (default: 50)
      NVIDIA_VISIBLE_DEVICES: "all"
      NVIDIA_DRIVER_CAPABILITIES: "compute,video,utility"
      ## Run as a non-root user after initialization (supported: 0, 33, 50-99, 500-600, and 900-1200):
      # PHOTOPRISM_UID: 1000
      # PHOTOPRISM_GID: 1000
      # PHOTOPRISM_UMASK: 0000
    ## Start as non-root user before initialization (supported: 0, 33, 50-99, 500-600, and 900-1200):
    # user: "1000:1000"
    ## Share hardware devices with FFmpeg and TensorFlow (optional):
    devices:
     - "/dev/nvidia0:/dev/nvidia0"                 # Nvidia CUDA
     - "/dev/nvidiactl:/dev/nvidiactl"
     - "/dev/nvidia-modeset:/dev/nvidia-modeset"
    #  - "/dev/nvidia-nvswitchctl:/dev/nvidia-nvswitchctl"
    #  - "/dev/nvidia-uvm:/dev/nvidia-uvm"
    #  - "/dev/nvidia-uvm-tools:/dev/nvidia-uvm-tools"
    #  - "/dev/video11:/dev/video11"                 # Video4Linux Video Encode Device (h264_v4l2m2m)
    working_dir: "/photoprism" # do not change or remove
    ## Storage Folders: "~" is a shortcut for your home directory, "." for the current directory
    volumes:
      # "/host/folder:/photoprism/folder"                # Example
      - "${DOCKER_NAS_DATA_DIR}/photoprism/originals:/photoprism/originals"               # Original media files (DO NOT REMOVE)
      # - "/example/family:/photoprism/originals/family" # *Additional* media folders can be mounted like this
      - "${DOCKER_NAS_DATA_DIR}/photoprism/import:/photoprism/import"                  # *Optional* base folder from which files can be imported to originals
      - "${DOCKER_NAS_DATA_DIR}/photoprism/storage:/photoprism/storage"                  # *Writable* storage folder for cache, database, and sidecar files (DO NOT REMOVE)
    deploy:
      resources:
        reservations:
          devices:
            - driver: "nvidia"
              count: 1
              capabilities: [gpu]

  ## Database Server (recommended)
  ## see https://docs.photoprism.app/getting-started/faq/#should-i-use-sqlite-mariadb-or-mysql
  mariadb:
    ## If MariaDB gets stuck in a restart loop, this points to a memory or filesystem issue:
    ## https://docs.photoprism.app/getting-started/troubleshooting/#fatal-server-errors
    restart: always
    container_name: mariadb
    # network_mode: host
    ports:
      - "3306:3306"
      - "33060:33060"
      - "33061:33061"
    image: mariadb:latest
    security_opt: # see https://github.com/MariaDB/mariadb-docker/issues/434#issuecomment-1136151239
      - seccomp:unconfined
      - apparmor:unconfined
    command: mysqld --transaction-isolation=READ-COMMITTED --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --max-connections=512 --innodb-rollback-on-timeout=OFF --innodb-lock-wait-timeout=120 --innodb_flush_log_at_trx_commit=0
    ## Never store database files on an unreliable device such as a USB flash drive, an SD card, or a shared network folder:
    volumes:
      - "${DOCKER_NAS_DATA_DIR}/mariadb:/var/lib/mysql" # DO NOT REMOVE
    environment:
      TZ: Asia/Shanghai
      MARIADB_AUTO_UPGRADE: "1"
      MARIADB_INITDB_SKIP_TZINFO: "1"
      MARIADB_DATABASE: "photoprism"
      MARIADB_USER: "photoprism"
      MARIADB_PASSWORD: "a123456789"
      MARIADB_ROOT_PASSWORD: "a123456789"

  portainer:
    image: gwq5210/portainer:latest
    container_name: portainer
    command: --tlsskipverify
    restart: always
    # network_mode: host
    ports:
      - "9443:9443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${DOCKER_NAS_DATA_DIR}/portainer:/data
    environment:
      TZ: Asia/Shanghai

  jellyfin:
    image: jellyfin/jellyfin:latest
    container_name: jellyfin
    network_mode: 'host'
    volumes:
      - ${DOCKER_NAS_CONF_DIR}/jellyfin:/config
      - ${DOCKER_NAS_DATA_DIR}/jellyfin/cache:/cache
      - ${DOCKER_NAS_DATA_DIR}/jellyfin/media:/media
    restart: always
    privileged: true
    environment:
      TZ: Asia/Shanghai
    deploy:
      resources:
        reservations:
          devices:
            - driver: "nvidia"
              count: 1
              capabilities: [gpu]

  nextcloud:
    image: gwq5210/nextcloud:latest
    container_name: nextcloud
    # network_mode: host
    restart: always
    volumes:
      - ${DOCKER_NAS_DATA_DIR}/nextcloud:/var/www/html
      - ./nextcloud/config/php-fpm.d/www.conf:/usr/local/etc/php-fpm.d/www.conf
    depends_on:
      - mariadb
      - redis
    privileged: true
    environment:
      - TZ=Asia/Shanghai
      - MYSQL_PASSWORD=a123456789
      - MYSQL_DATABASE=nextcloud
      - MYSQL_USER=nextcloud
      - MYSQL_HOST=mariadb
      - PHP_MEMORY_LIMIT=1024M
      - PHP_UPLOAD_LIMIT=102400M
      - REDIS_HOST=redis
    devices:
     - /dev/dri:/dev/dri
    deploy:
      resources:
        reservations:
          devices:
            - capabilities: [gpu]

  nginx:
    image: gwq5210/nginx:latest
    container_name: nginx
    restart: always
    depends_on:
      - nextcloud
    # network_mode: host
    ports:
      - 8080:8080
    volumes:
      - ./nginx/conf/nginx.conf:/etc/nginx/nginx.conf:ro
      - ${DOCKER_NAS_DATA_DIR}/nextcloud:/var/www/html
    environment:
      - TZ=Asia/Shanghai

  redis:
    container_name: redis
    image: redis:alpine
    # network_mode: host
    ports:
      - 6379:6379
    restart: always

  nextcloud_cron:
    image: gwq5210/nextcloud:latest
    container_name: nextcloud_cron
    restart: always
    volumes:
      - ${DOCKER_NAS_DATA_DIR}/nextcloud:/var/www/html
      - ./nextcloud/config/php-fpm.d/www.conf:/usr/local/etc/php-fpm.d/www.conf
      - ./nextcloud/cron.txt:/var/spool/cron/crontabs/www-data
    entrypoint: /cron.sh
    depends_on:
      - mariadb
      - redis

  frpc:
    image: snowdreamtech/frpc:latest
    container_name: frpc
    restart: always
    volumes:
      - ./frp/conf/frpc.ini:/etc/frp/frpc.ini
      - ${DOCKER_NAS_LOGS_DIR}/frp:/var/log/frp
    network_mode: "host"
    environment:
      - TZ=Asia/Shanghai

  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Asia/Shanghai
      - WEBUI_PORT=6880
    volumes:
      - ${DOCKER_NAS_HOME}/qbittorrent/conf:/config
      - ${DOCKER_NAS_DOWNLOADS}:/downloads
    ports:
      - 6880:6880
      - 6881:6881
      - 6881:6881/udp
    restart: unless-stopped
